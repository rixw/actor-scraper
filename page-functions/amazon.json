{
  "startUrls": [
    {
      "url": "https://www.amazon.co.uk/beer-wine-spirits/b?ie=UTF8&node=358583031&ref_=sd_allcat_wine_spirits&nocache=1557313562408",
      "method": "GET",
      "userData": {
        "pageType": "plp-launch"
      }
    }
  ],
  "useRequestQueue": true,
  "pageFunction": "async function pageFunction(context) {\n    const { $, request, response, log, enqueueRequest } = context;\n    const { url, userData } = request;\n    const { pageType } = userData;\n\n    $.prototype.match = function (pattern) {\n        if (this.length > 0 && pattern) {\n            return this.filter((i, el) => $(el).text().search(pattern) > -1);\n        }\n        return this;\n    };\n    $.prototype.firstText = function () {\n        const contents = this.first().text();\n        return contents ? contents.replace(/\\s\\s+/g, ' ').trim() : '';\n    };\n    $.prototype.eachText = function (joinWith) {\n        const result = [];\n        this.each((i, el) => result.push($(el).firstText()));\n        if (joinWith) return result.join(joinWith);\n        return result;\n    };\n    $.prototype.eachAttr = function (attr, includeEmpty) {\n        const result = [];\n        this.each((i, el) => result.push($(el).attr(attr)));\n        if (!includeEmpty) return result.filter(x => !!x);\n        return result;\n    };\n\n    const categories = [\n        'Beer',\n        'Cider',\n        'Fortified & Dessert Wines',\n        'Sparkling Wine & Champagne',\n        'Spirits',\n        'Wine',\n    ];\n\n    if (response.status >= 400) throw new Error(`URL: ${url} response status ${response.status}`);\n\n    try {\n        // Have we been robot checked?\n        if ($('head title').firstText().match(/Robot/i)) {\n            await setTimeout(() => {}, Math.ceil(Math.random() * 10000) + 10000);\n            throw new Error(`URL: ${url} robot detection`);\n        }\n\n        if (pageType === 'plp-launch') return handleLaunch();\n        if (pageType === 'plp-prime') return handlePrime();\n        if (pageType === 'plp-category') return handleCategory();\n        if (pageType === 'plp-pagination') return handlePlp();\n        if (pageType === 'pdp') return handlePdp();\n        throw new Error(`URL: ${url} unrecognised page type \"${pageType}\"`);\n    } catch (e) {\n        context.Apify.setValue(`ERROR-${pageType}`, context.html, { contentType: 'text/html' });\n        throw e;\n    }\n\n    async function handleLaunch() {\n        log.debug(`URL: ${url} PLP launch`);\n        const amazonJson = $('div#leftNav h4')\n            .match(/Seller/)\n            .next('ul')\n            .find('li span.a-declarative')\n            .attr('data-s-ref-selected');\n        const amazonObj = JSON.parse(amazonJson);\n        log.debug(`URL: ${url} PLP launch => ${amazonObj.url}`);\n        enqueueRequest({\n            url: baseUrl(amazonObj.url),\n            userData: {\n                pageType: 'plp-prime',\n            },\n        });\n    }\n\n    async function handlePrime() {\n        log.debug(`URL: ${url} PLP Prime`);\n        const primeLink = $('div#primeRefinements ul li i.a-icon-prime')\n            .closest('a')\n            .attr('href');\n        log.debug(`URL: ${url} PLP Prime => ${primeLink}`);\n        enqueueRequest({\n            url: baseUrl(primeLink),\n            userData: {\n                pageType: 'plp-category',\n            },\n        });\n    }\n\n    async function handleCategory() {\n        log.debug(`URL: ${url} PLP category`);\n\n        // If we have sub-categories of interest, queue them\n        const categoryLinks = $('div#departments ul li.s-navigation-indent-2 a');\n        let subcats = 0;\n        categoryLinks.each((i, el) => {\n            if (categories.includes($(el).firstText())) {\n                subcats++;\n                log.debug(`URL: ${url} PLP category => ${$(el).attr('href')}`);\n                enqueueRequest({\n                    url: baseUrl($(el).attr('href')),\n                    userData: {\n                        pageType: 'plp-category',\n                    },\n                });\n            }\n        });\n\n        // We're as low down the category tree as we're interested in, so treat as page 1\n        if (subcats) return;\n        return handlePlp();\n    }\n\n    async function handlePlp() {\n        log.debug(`URL: ${url} PLP`);\n\n        // Pagination\n        const nextLink = $('ul.a-pagination li.a-last a');\n        if (nextLink.length > 0) {\n            log.debug(`URL: ${url} PLP => ${nextLink.attr('href')}`);\n            enqueueRequest({\n                url: baseUrl(nextLink.attr('href')),\n                userData: {\n                    pageType: 'plp-pagination',\n                },\n            });\n        }\n\n        // PDPs\n        const results = [];\n        const products = $('div.s-result-list div[data-asin] h2 a.a-link-normal');\n        products.each((i, el) => {\n            const href = $(el).attr('href');\n            if (href) enqueueRequest({ url: baseUrl(href), userData: { pageType: 'pdp' } });\n        });\n\n        await pagePause();\n        if (results.length > 0) return results;\n    }\n\n    async function handlePdp() {\n        log.debug(`URL: ${url} PDP`);\n\n        const id = generalInfo(/ASIN/);\n        if (!id) {\n            log.debug(`URL: ${url} no ID found`);\n            return;\n        }\n        log.debug(`URL: ${url} ID: ${id}`);\n        const result = {\n            crawlName: 'amazon',\n            url: request.url,\n            productId: id,\n        };\n        result.name = $('div#dp-container h1#title').firstText();\n        result.vintage = generalInfo(/Vintage/i);\n        result.size = `${generalInfo(/Units/i)} ${generalInfo(/Volume/i)}`.trim();\n        result.abv = generalInfo(/Alcohol Content/i);\n        result.rating = $('div#dp-container div#averageCustomerReviews i.a-icon-star span.a-icon-alt').firstText();\n        result.ratingCount = $('div#dp-container div#averageCustomerReviews span#acrCustomerReviewText').firstText();\n        result.colour = generalInfo(/Type/i);\n        result.grapes = `${generalInfo(/Dominant Varietal/i)} ${generalInfo(/Varietal Composition/i)}`.trim();\n        // result.closure = $('').firstText();\n        result.description = $('div#dp-container div#feature-bullets ul li span.a-list-item').eachText('\\n');\n        result.description2 = $('div#dp-container div#productDescription h3').next('p').firstText();\n        result.country = generalInfo(/Country of origin/i);\n        result.region = generalInfo(/Region/i);\n        // result.region2 = $('').firstText();\n        result.breadcrumbs = $('div#wayfinding-breadcrumbs_container ul li a').eachText();\n        result.bottleImage = $('div#main-image-container div#imgTagWrapperId img').attr('data-old-hires')\n            || $('div#main-image-container div#imgTagWrapperId img').attr('src');\n        if (!result.bottleImage || !result.bottleImage.startsWith('http') || result.bottleImage.length > 1024) result.bottleImage = '';\n        // result.bannerImage = $('').firstText();\n        result.price = $('div#dp-container div#price span#priceblock_ourprice').firstText();\n        if (!result.price) result.price = $('div#dp-container div#price span#priceblock_dealprice').firstText();\n\n        if ($('span#pantryPrimeMsgBB').length > 0) result.offers = [$('span#pantryPrimeMsgBB').firstText()];\n\n        result.available = $('div#availability span.a-color-success').match(/in stock/i).length > 0;\n        result.vegan = generalInfo(/Speciality/i).search(/Vegan/i) > -1;\n        result.vegetarian = generalInfo(/Speciality/i).search(/Vegetarian/i) > -1;\n        result.organic = generalInfo(/Speciality/i).search(/Organic/i) > -1;\n        result.fairtrade = generalInfo(/Speciality/i).search(/Fairtrade/i) > -1;\n        // result.biodynamic = $('').length > 0;\n        await pagePause();\n        return result;\n\n        function generalInfo(pattern) {\n            return $('div#dp-container div#prodDetails table tr td.label').match(pattern).next('td.value').firstText();\n        }\n    }\n\n    function baseUrl(relative) {\n        const urlObj = new URL(relative, 'https://www.amazon.co.uk/');\n        return urlObj.href;\n    }\n\n    async function pagePause() {\n        return new Promise(resolve => setTimeout(resolve, Math.ceil(Math.random() * 1000) + 500));\n    }\n}\n",
  "proxyConfiguration": {
    "useApifyProxy": true
  },
  "debugLog": false,
  "ignoreSslErrors": false,
  "maxRequestRetries": 0,
  "maxPagesPerCrawl": 10000,
  "maxConcurrency": 10,
  "pageLoadTimeoutSecs": 20,
  "requestOptions": {
    "jar": false
  },
  "userAgents": [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1 Safari/605.1.15",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36",
    "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:66.0) Gecko/20100101 Firefox/66.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134"
  ],
  "headers": {
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
    "Accept-Encoding": "gzip, deflate, br",
    "Connection": "keep-alive",
    "Cache-Control": "max-age=0",
    "Upgrade-Insecure-Requests": 1,
    "Accept-Language": "en-GB,en-US;q=0.9,en;q=0.8"
  }
}